{"name": "test_buy_product_2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x013E6643]\n\t(No symbol) [0x0137BE21]\n\t(No symbol) [0x0127DA9D]\n\t(No symbol) [0x012B1342]\n\t(No symbol) [0x012B147B]\n\t(No symbol) [0x012E8DC2]\n\t(No symbol) [0x012CFDC4]\n\t(No symbol) [0x012E6B09]\n\t(No symbol) [0x012CFB76]\n\t(No symbol) [0x012A49C1]\n\t(No symbol) [0x012A5E5D]\n\tGetHandleVerifier [0x0165A142+2497106]\n\tGetHandleVerifier [0x016885D3+2686691]\n\tGetHandleVerifier [0x0168BB9C+2700460]\n\tGetHandleVerifier [0x01493B10+635936]\n\t(No symbol) [0x01384A1F]\n\t(No symbol) [0x0138A418]\n\t(No symbol) [0x0138A505]\n\t(No symbol) [0x0139508B]\n\tBaseThreadInitThunk [0x759B347D+18]\n\tRtlInitializeExceptionChain [0x774A9852+99]\n\tRtlInitializeExceptionChain [0x774A9825+54]", "trace": "set_up = None, set_group = None\n\n    @allure.description(\"Test Buy Product 2\")\n    def test_buy_product_2(set_up, set_group):\n        options = Options()\n        options.add_experimental_option('excludeSwitches', ['enable-logging'])\n        driver = webdriver.Chrome(options=options, service=ChromeService(ChromeDriverManager().install()))\n    \n        print(\"Start Test 2\")\n    \n        login = Login_page(driver)\n>       login.authorization()\n\ntests\\test_buy_product.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\login_pages.py:34: in authorization\n    self.input_value(self.email_login, \"karpov.sti@bk.ru\")\nbase\\base_class.py:83: in input_value\n    elem = WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH, locator)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a8d5cc1d226152ca78d5d4184f1c9f7c\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x00000000041B8040>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x013E6643]\nE       \t(No symbol) [0x0137BE21]\nE       \t(No symbol) [0x0127DA9D]\nE       \t(No symbol) [0x012B1342]\nE       \t(No symbol) [0x012B147B]\nE       \t(No symbol) [0x012E8DC2]\nE       \t(No symbol) [0x012CFDC4]\nE       \t(No symbol) [0x012E6B09]\nE       \t(No symbol) [0x012CFB76]\nE       \t(No symbol) [0x012A49C1]\nE       \t(No symbol) [0x012A5E5D]\nE       \tGetHandleVerifier [0x0165A142+2497106]\nE       \tGetHandleVerifier [0x016885D3+2686691]\nE       \tGetHandleVerifier [0x0168BB9C+2700460]\nE       \tGetHandleVerifier [0x01493B10+635936]\nE       \t(No symbol) [0x01384A1F]\nE       \t(No symbol) [0x0138A418]\nE       \t(No symbol) [0x0138A505]\nE       \t(No symbol) [0x0139508B]\nE       \tBaseThreadInitThunk [0x759B347D+18]\nE       \tRtlInitializeExceptionChain [0x774A9852+99]\nE       \tRtlInitializeExceptionChain [0x774A9825+54]\n\nC:\\Python 3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "description": "Test Buy Product 2", "steps": [{"name": "Authorization", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nBacktrace:\n\t(No symbol) [0x013E6643]\n\t(No symbol) [0x0137BE21]\n\t(No symbol) [0x0127DA9D]\n\t(No symbol) [0x012B1342]\n\t(No symbol) [0x012B147B]\n\t(No symbol) [0x012E8DC2]\n\t(No symbol) [0x012CFDC4]\n\t(No symbol) [0x012E6B09]\n\t(No symbol) [0x012CFB76]\n\t(No symbol) [0x012A49C1]\n\t(No symbol) [0x012A5E5D]\n\tGetHandleVerifier [0x0165A142+2497106]\n\tGetHandleVerifier [0x016885D3+2686691]\n\tGetHandleVerifier [0x0168BB9C+2700460]\n\tGetHandleVerifier [0x01493B10+635936]\n\t(No symbol) [0x01384A1F]\n\t(No symbol) [0x0138A418]\n\t(No symbol) [0x0138A505]\n\t(No symbol) [0x0139508B]\n\tBaseThreadInitThunk [0x759B347D+18]\n\tRtlInitializeExceptionChain [0x774A9852+99]\n\tRtlInitializeExceptionChain [0x774A9825+54]\n\n", "trace": "  File \"C:\\Users\\Серёга\\PycharmProjects\\elmart ver.2\\pages\\login_pages.py\", line 34, in authorization\n    self.input_value(self.email_login, \"karpov.sti@bk.ru\")\n  File \"C:\\Users\\Серёга\\PycharmProjects\\elmart ver.2\\base\\base_class.py\", line 83, in input_value\n    elem = WebDriverWait(self.driver, 30).until(EC.element_to_be_clickable((By.XPATH, locator)))\n  File \"C:\\Python 3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1728981100560, "stop": 1728981204157}], "attachments": [{"name": "stdout", "source": "6fc2bab3-7610-4cda-906f-dc6cdae53385-attachment.txt", "type": "text/plain"}], "start": 1728981094878, "stop": 1728981204189, "uuid": "12bab1f1-81b4-4e0a-8873-05e545440d66", "historyId": "af89bf451f7b2569ba8ebd15b136f221", "testCaseId": "af89bf451f7b2569ba8ebd15b136f221", "fullName": "tests.test_buy_product#test_buy_product_2", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_product"}, {"name": "host", "value": "Serega"}, {"name": "thread", "value": "5468-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_product"}]}